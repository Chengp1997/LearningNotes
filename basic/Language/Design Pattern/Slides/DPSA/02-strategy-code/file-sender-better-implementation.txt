// new way:
interface CompressionAlgorithm {
  public CompressedFile compress(File f);
  public File decompress(CompressedFile f);
}

class AudioCompression implements CompressionAlgorithm {
  public CompressedFile compress(File f) {}
  public File decompress(CompressedFile {}
}

public class Sender {
  private CompressionAlgorithm ca;
  public setCompressionAlgorithm(CompressionAlgorithm ca) {
    this.ca = ca;
  }
  public void sendFile(File f) {
    CompressedFile cf = ca.compress(f);
    send(cf);
  }
  protected send(CompressedFile cf) {
   //...
  }
}

main:
Sender s = new Sender();
s.setCompressionAlgorithm(new AudioCompression());
s.sendFile(audioFile);